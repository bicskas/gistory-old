{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["jQuery(document).ready(function ($) {\n\n\t$('.alert>.close').on('click', function () {\n\t\t$(this).parent.remove();\n\t});\n\n\t$(document).on('click', '.confirm', function () {\n\t\treturn confirm('Biztos benne?');\n\t});\n\n\t$.ajaxSetup({\n\t\theaders: {\n\t\t\t'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n\t\t}\n\t});\n\n\t// törlés gomb\n\t$(document).on('click', '.torol', function (e) {\n\t\te.preventDefault();\n\t\tif (confirm('Biztos benne?')) {\n\t\t\tvar $this = $(this);\n\t\t\t$.ajax({\n\t\t\t\turl: $this.attr('href'),\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\tsuccess: function (resp) {\n\t\t\t\t\t$('#item_' + resp.id).remove();\n\t\t\t\t},\n\t\t\t\terror: function () {\n\t\t\t\t\talert('Hiba történt');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\n\t/*\n\n\t var $kereses_mezo = $('#nev1');\n\t if ($kereses_mezo.length) {\n\t var kepviselok = new Bloodhound({\n\t datumTokenizer: Bloodhound.tokenizers.obj.whitespace('nev'),\n\t queryTokenizer: Bloodhound.tokenizers.whitespace,\n\t remote: {\n\t url: '/kereses/'+ $kereses_mezo.data('projectid')+'/%nev',\n\t wildcard: '%nev'\n\t },\n\t limit: 20\n\t });\n\n\t kepviselok.initialize();\n\n\t $('#typeahead .typeahead').typeahead(null, {\n\t name: 'kepviselo-nev',\n\t displayKey: 'nev',\n\t source: kepviselok.ttAdapter(),\n\t hint: true,\n\t highlight: true,\n\t minLength: 2,\n\t limit: 10\n\t });\n\t }\n\t */\n\n\n\n\tvar diameter = 960,\n\t\tradius = diameter / 2,\n\t\tinnerRadius = radius - 120;\n\n\tvar cluster = d3.layout.cluster()\n\t\t.size([360, innerRadius])\n\t\t.sort(null)\n\t\t.value(function(d) { return d.size; });\n\n\tvar bundle = d3.layout.bundle();\n\n\tvar line = d3.svg.line.radial()\n\t\t.interpolate(\"bundle\")\n\t\t.tension(.85)\n\t\t.radius(function(d) { return d.y; })\n\t\t.angle(function(d) { return d.x / 180 * Math.PI; });\n\n\tvar svg = d3.select(\"body\").append(\"svg\")\n\t\t.attr(\"width\", diameter)\n\t\t.attr(\"height\", diameter)\n\t\t.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\n\n\tvar link = svg.append(\"g\").selectAll(\".link\"),\n\t\tnode = svg.append(\"g\").selectAll(\".node\");\n\n\td3.json(\"/json/readme-flare-imports.json\", function(error, classes) {\n\t\tif (error) throw error;\n\n\t\tvar nodes = cluster.nodes(packageHierarchy(classes)),\n\t\t\tlinks = packageImports(nodes);\n\n\t\tlink = link\n\t\t\t.data(bundle(links))\n\t\t\t.enter().append(\"path\")\n\t\t\t.each(function(d) { d.source = d[0], d.target = d[d.length - 1]; })\n\t\t\t.attr(\"class\", \"link\")\n\t\t\t.attr(\"d\", line);\n\n\t\tnode = node\n\t\t\t.data(nodes.filter(function(n) { return !n.children; }))\n\t\t\t.enter().append(\"text\")\n\t\t\t.attr(\"class\", \"node\")\n\t\t\t.attr(\"dy\", \".31em\")\n\t\t\t.attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + (d.y + 8) + \",0)\" + (d.x < 180 ? \"\" : \"rotate(180)\"); })\n\t\t\t.style(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\n\t\t\t.text(function(d) { return d.key; })\n\t\t\t.on(\"mouseover\", mouseovered)\n\t\t\t.on(\"mouseout\", mouseouted);\n\t});\n\n\tfunction mouseovered(d) {\n\t\tnode\n\t\t\t.each(function(n) { n.target = n.source = false; });\n\n\t\tlink\n\t\t\t.classed(\"link--target\", function(l) { if (l.target === d) return l.source.source = true; })\n\t\t\t.classed(\"link--source\", function(l) { if (l.source === d) return l.target.target = true; })\n\t\t\t.filter(function(l) { return l.target === d || l.source === d; })\n\t\t\t.each(function() { this.parentNode.appendChild(this); });\n\n\t\tnode\n\t\t\t.classed(\"node--target\", function(n) { return n.target; })\n\t\t\t.classed(\"node--source\", function(n) { return n.source; });\n\t}\n\n\tfunction mouseouted(d) {\n\t\tlink\n\t\t\t.classed(\"link--target\", false)\n\t\t\t.classed(\"link--source\", false);\n\n\t\tnode\n\t\t\t.classed(\"node--target\", false)\n\t\t\t.classed(\"node--source\", false);\n\t}\n\n\td3.select(self.frameElement).style(\"height\", diameter + \"px\");\n\n// Lazily construct the package hierarchy from class names.\n\tfunction packageHierarchy(classes) {\n\t\tvar map = {};\n\n\t\tfunction find(name, data) {\n\t\t\tvar node = map[name], i;\n\t\t\tif (!node) {\n\t\t\t\tnode = map[name] = data || {name: name, children: []};\n\t\t\t\tif (name.length) {\n\t\t\t\t\tnode.parent = find(name.substring(0, i = name.lastIndexOf(\".\")));\n\t\t\t\t\tnode.parent.children.push(node);\n\t\t\t\t\tnode.key = name.substring(i + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn node;\n\t\t}\n\n\t\tclasses.forEach(function(d) {\n\t\t\tfind(d.name, d);\n\t\t});\n\n\t\treturn map[\"\"];\n\t}\n\n// Return a list of imports for the given array of nodes.\n\tfunction packageImports(nodes) {\n\t\tvar map = {},\n\t\t\timports = [];\n\n\t\t// Compute a map from name to node.\n\t\tnodes.forEach(function(d) {\n\t\t\tmap[d.name] = d;\n\t\t});\n\n\t\t// For each import, construct a link from the source to target node.\n\t\tnodes.forEach(function(d) {\n\t\t\tif (d.imports) d.imports.forEach(function(i) {\n\t\t\t\timports.push({source: map[d.name], target: map[i]});\n\t\t\t});\n\t\t});\n\n\t\treturn imports;\n\t}\n\n\n});"],"sourceRoot":"/source/"}